name: Glue Job CI/CD

on:
  push:
    branches: [ main ] # Trigger on push to main branch
  pull_request:
    branches: [ main ] 

jobs:
  test:
    name: Run PySpark Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9' # Choose a version compatible with Glue/PySpark

      - name: Set up Java (required for Spark)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Or 'zulu', 'adopt'
          java-version: '11' # Common version for Spark 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          java -version # Verify Java setup
          python --version # Verify Python setup
          pip list # List installed packages

      - name: Run Pytest Integration Tests
        run: pytest tests/test_glue_etl.py -v # -v for verbose output
        env:
           PYSPARK_PYTHON: python # Ensure pytest uses the correct python
           PYSPARK_DRIVER_PYTHON: python

  deploy:
    name: Deploy Glue Script to AWS
    needs: test # Run only if tests pass
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for configure-aws-credentials using OIDC
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4 # Use latest version
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Use AWS secrets
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Use AWS secrets
          aws-region: ${{ secrets.AWS_REGION }} # e.g., eu-west-1

      - name: Install AWS CLI
        run: |
            python3 -m venv awsclivenv
            source awsclivenv/bin/activate
            pip install --upgrade pip
            pip install awscli
            aws --version

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
          
      - name: Upload Glue Script to S3
        run: |
          aws s3 cp src/glue_etl.py s3://${{ secrets.GLUE_SCRIPT_S3_BUCKET }}/${{ secrets.GLUE_SCRIPT_S3_KEY }}
        env:
          GLUE_SCRIPT_S3_BUCKET: ${{ secrets.GLUE_SCRIPT_S3_BUCKET }}
          GLUE_SCRIPT_S3_KEY: ${{ secrets.GLUE_SCRIPT_S3_KEY }}
      
      - name: Terraform Init
        run: terraform init
        working-directory: terraform/glue-job

      - name: Delete existing Glue Job (if exists)
        run: |
          set +e
          aws glue delete-job --job-name "${{ secrets.GLUE_JOB_NAME }}"
          set -e
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -input=false\
            -var="aws_region=${{ secrets.AWS_REGION }}" \
            -var="job_name=${{ secrets.GLUE_JOB_NAME }}" \
            -var="glue_role_arn=${{ secrets.GLUE_JOB_ROLE }}" \
            -var="script_location=s3://${{ secrets.GLUE_SCRIPT_S3_BUCKET }}/${{ secrets.GLUE_SCRIPT_S3_KEY }}" \
            -var="glue_version=${{ secrets.GLUE_VERSION }}" \
            -var="number_of_workers=${{ secrets.GLUE_NUMBER_OF_WORKERS }}" \
            -var="worker_type=${{ secrets.GLUE_WORKER_TYPE }}" \
            -var="products_output_path=${{ secrets.PRODUCTS_OUTPUT_PATH }}" \
            -var="order_items_output_path=${{ secrets.ORDER_ITEMS_OUTPUT_PATH }}" \
            -var="orders_output_path=${{ secrets.ORDERS_OUTPUT_PATH }}" \
            -var="rejected_path=${{ secrets.REJECTED_PATH }}" \
            -var="s3_bucket_path=${{ secrets.S3_BUCKET_PATH }}" \
            -var="log_level=${{ secrets.LOG_LEVEL }}" \
            -var="temp_dir=${{ secrets.TEMP_DIR }}" \
            -var="spark_event_logs_path=${{ secrets.SPARK_EVENT_LOGS_PATH }}"
        working-directory: terraform/glue-job
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Deployment Summary
        run: |
          echo "Successfully deployed Glue job with script from s3://${{ secrets.GLUE_SCRIPT_S3_BUCKET }}/${{ secrets.GLUE_SCRIPT_S3_KEY }}"
          echo "Updated Glue Job: ${{ secrets.GLUE_JOB_NAME }}"
